SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO


CREATE PROCEDURE [dbo].[sp_scd_relationship] 
(
	@BatchID int = 0
)

AS
SET NOCOUNT ON;
	-- ==================================================================
	-- Slowly Changing Dimension Relationship script 
	-- Author: Nigatu, Biz
	-- Version: 1.0.0.0		
	-- Sample use: EXEC sp_scd_relationship 4;
	-- ==================================================================
/*
	History:
	Initials		Date		Description
	===========		==========	=======================================
	Nigatu, Biz		9/21/2015	This is stored procedure helps the ELT 
								process to create relationship among 
								related warehouse after the are loaded.
*/
	

-- ACTIVITY 
-- ACTIVITY_STATUS_KEY
UPDATE dst SET dst.ACTIVITY_STATUS_KEY = src.ACTIVITY_STATUS_KEY
FROM dbo.ACTIVITY dst
CROSS APPLY(
	SELECT ACTIVITY_STATUS_KEY
	FROM dbo.ACTIVITY_STATUS src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.ACTIVITY_STATUS_ID = dst.ACTIVITY_STATUS_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.ACTIVITY_STATUS_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- ACTIVITY 
-- ACTIVITY_TYPE_KEY
UPDATE dst SET dst.ACTIVITY_TYPE_KEY = src.ACTIVITY_TYPE_KEY
FROM dbo.ACTIVITY dst
CROSS APPLY(
	SELECT ACTIVITY_TYPE_KEY
	FROM dbo.ACTIVITY_TYPE src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.ACTIVITY_TYPE_ID= dst.ACTIVITY_TYPE_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.ACTIVITY_TYPE_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- ACTIVITY 
-- LOAN_KEY
UPDATE dst SET dst.LOAN_KEY = src.LOAN_KEY
FROM dbo.ACTIVITY dst 
CROSS APPLY(
	SELECT LOAN_KEY
	FROM dbo.LOAN src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.LOAN_ID= dst.LOAN_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.LOAN_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- ACTIVITY 
-- SOURCE_ACTIVITY_STATUS_KEY
UPDATE dst SET dst.SOURCE_ACTIVITY_STATUS_KEY = src.SOURCE_ACTIVITY_STATUS_KEY
FROM dbo.ACTIVITY dst 
CROSS APPLY(
	SELECT SOURCE_ACTIVITY_STATUS_KEY
	FROM dbo.SOURCE_ACTIVITY_STATUS src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.SOURCE_ACTIVITY_STATUS_ID= dst.SOURCE_ACTIVITY_STATUS_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.SOURCE_ACTIVITY_STATUS_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- ACTIVITY 
-- SOURCE_ACTIVITY_TYPE_KEY
UPDATE dst SET dst.SOURCE_ACTIVITY_TYPE_KEY = src.SOURCE_ACTIVITY_TYPE_KEY
FROM dbo.ACTIVITY dst  
CROSS APPLY(
	SELECT SOURCE_ACTIVITY_TYPE_KEY
	FROM dbo.SOURCE_ACTIVITY_TYPE src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.SOURCE_ACTIVITY_TYPE_ID= dst.SOURCE_ACTIVITY_TYPE_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.SOURCE_ACTIVITY_TYPE_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- ACTIVITY_COMMENT 
-- ACTIVITY_KEY
UPDATE dst SET dst.ACTIVITY_KEY = src.ACTIVITY_KEY
FROM dbo.ACTIVITY_COMMENT dst 
CROSS APPLY(
	SELECT ACTIVITY_KEY
	FROM dbo.ACTIVITY src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.ACTIVITY_ID = dst.ACTIVITY_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.ACTIVITY_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;


-- ACTIVITY_COMMENT 
-- CONTACT_KEY
UPDATE dst SET dst.CONTACT_KEY = src.CONTACT_KEY
FROM dbo.ACTIVITY_COMMENT dst 
CROSS APPLY(
	SELECT CONTACT_KEY
	FROM dbo.END_USER src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.CONTACT_ID = dst.CONTACT_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.CONTACT_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- COMPANY 
-- OWNING_COMPANY_KEY
UPDATE dst SET dst.OWNING_COMPANY_KEY = src.COMPANY_KEY
FROM dbo.COMPANY dst 
CROSS APPLY(
	SELECT COMPANY_KEY
	FROM dbo.COMPANY src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.OWNING_COMPANY_ID = dst.COMPANY_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.COMPANY_KEY IS NULL
--AND dst.BATCH_ID = @BatchID  ;


-- CONDITION 
-- INVESTOR_CONDITION_STATUS_KEY
UPDATE dst SET dst.INVESTOR_CONDITION_STATUS_KEY = src.INVESTOR_CONDITION_STATUS_KEY
FROM dbo.CONDITION dst 
CROSS APPLY(
	SELECT INVESTOR_CONDITION_STATUS_KEY
	FROM dbo.INVESTOR_CONDITION_STATUS src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.INVESTOR_CONDITION_STATUS_ID = dst.INVESTOR_CONDITION_STATUS_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.INVESTOR_CONDITION_STATUS_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- PRICING_SCENARIO 
-- PRICING_SCENARIO_KEY
UPDATE dst SET dst.INV_DUE_DILG_SAMPLE_TYPE_KEY = src.INV_DUE_DILG_SAMPLE_TYPE_KEY
FROM dbo.PRICING_SCENARIO dst 
CROSS APPLY(
	SELECT INV_DUE_DILG_SAMPLE_TYPE_KEY
	FROM dbo.INV_DUE_DILG_SAMPLE_TYPE src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.INV_DUE_DILG_SAMPLE_TYPE_ID = dst.INV_DUE_DILG_SAMPLE_TYPE_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.INV_DUE_DILG_SAMPLE_TYPE_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- DUE_DILG_VENDOR_DATA 
-- PRICING_SCENARIO_KEY
UPDATE dst SET dst.PRICING_SCENARIO_KEY = src.PRICING_SCENARIO_KEY
FROM dbo.DUE_DILG_VENDOR_DATA dst 
CROSS APPLY(
	SELECT PRICING_SCENARIO_KEY
	FROM dbo.PRICING_SCENARIO src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.PRICING_SCENARIO_ID = dst.PRICING_SCENARIO_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.PRICING_SCENARIO_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- DUE_DILG_VENDOR_DATA 
-- DUE_DILG_VENDOR_STATUS_KEY
UPDATE dst SET dst.DUE_DILG_VENDOR_STATUS_KEY = src.DUE_DILG_VENDOR_STATUS_KEY
FROM dbo.DUE_DILG_VENDOR_DATA dst 
CROSS APPLY(
	SELECT DUE_DILG_VENDOR_STATUS_KEY
	FROM dbo.DUE_DILG_VENDOR_STATUS src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.DUE_DILG_VENDOR_STATUS_ID = dst.DUE_DILG_VENDOR_STATUS_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.DUE_DILG_VENDOR_STATUS_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;


-- DUE_DILG_VENDOR_DATA 
-- COMPANY_KEY
UPDATE dst SET dst.COMPANY_KEY = src.COMPANY_KEY
FROM dbo.DUE_DILG_VENDOR_DATA dst 
CROSS APPLY(
	SELECT COMPANY_KEY
	FROM dbo.COMPANY src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.COMPANY_ID = dst.COMPANY_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.DUE_DILG_VENDOR_STATUS_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- END_USER 
-- COMPANY_KEY
UPDATE dst SET dst.COMPANY_KEY = src.COMPANY_KEY
FROM dbo.END_USER dst 
CROSS APPLY(
	SELECT COMPANY_KEY
	FROM dbo.COMPANY src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.COMPANY_ID = dst.COMPANY_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.COMPANY_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;


-- HISTORY_EVENT 
-- LOAN_KEY
UPDATE dst SET dst.LOAN_KEY = src.LOAN_KEY
FROM dbo.HISTORY_EVENT dst
CROSS APPLY(
	SELECT LOAN_KEY
	FROM dbo.LOAN src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.LOAN_ID = dst.LOAN_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.LOAN_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- LOAN 
-- COMPANY_KEY
UPDATE dst SET dst.COMPANY_KEY = src.COMPANY_KEY
FROM dbo.LOAN dst 
CROSS APPLY(
	SELECT COMPANY_KEY
	FROM dbo.COMPANY src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.COMPANY_ID = dst.COMPANY_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.COMPANY_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- LOAN 
-- SELLING_COMPANY_KEY
UPDATE dst SET dst.SELLING_COMPANY_KEY = src.COMPANY_KEY
FROM dbo.LOAN dst 
CROSS APPLY(
	SELECT COMPANY_KEY
	FROM dbo.COMPANY src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.COMPANY_ID = dst.SELLING_COMPANY_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.SELLING_COMPANY_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- LOAN_COMMENT 
-- LOAN_KEY
UPDATE dst SET dst.LOAN_KEY = src.LOAN_KEY
FROM dbo.LOAN_COMMENT dst 
CROSS APPLY(
	SELECT LOAN_KEY
	FROM dbo.LOAN src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.LOAN_ID = dst.LOAN_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.LOAN_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;


-- LOAN_END_USER 
-- LOAN_KEY
UPDATE dst SET dst.LOAN_KEY = src.LOAN_KEY
FROM dbo.LOAN_END_USER dst 
CROSS APPLY(
	SELECT LOAN_KEY
	FROM dbo.LOAN src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.LOAN_ID = dst.LOAN_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.LOAN_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- LOAN_END_USER 
-- JOB_ROLE_KEY
UPDATE dst SET dst.JOB_ROLE_KEY = src.JOB_ROLE_KEY
FROM dbo.LOAN_END_USER dst 
CROSS APPLY(
	SELECT JOB_ROLE_KEY
	FROM dbo.JOB_ROLE src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.JOB_ROLE_ID = dst.JOB_ROLE_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.JOB_ROLE_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;


-- PRICING_SCENARIO 
-- LOAN_KEY
UPDATE dst SET dst.LOAN_KEY = src.LOAN_KEY
FROM dbo.PRICING_SCENARIO dst 
CROSS APPLY(
	SELECT LOAN_KEY
	FROM dbo.LOAN src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.LOAN_ID = dst.LOAN_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.LOAN_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- PRICING_SCENARIO 
-- PIGGY_BACK_SCENARIO_KEY
UPDATE dst SET dst.PIGGY_BACK_SCENARIO_KEY = src.PRICING_SCENARIO_KEY
FROM dbo.PRICING_SCENARIO dst 
CROSS APPLY(
	SELECT PRICING_SCENARIO_KEY
	FROM dbo.PRICING_SCENARIO src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.PRICING_SCENARIO_ID = dst.PIGGY_BACK_SCENARIO_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.PIGGY_BACK_SCENARIO_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- PRICING_SCENARIO 
-- PARENT_SCENARIO_KEY
UPDATE dst SET dst.PARENT_SCENARIO_KEY = src.PRICING_SCENARIO_KEY
FROM dbo.PRICING_SCENARIO dst 
CROSS APPLY(
	SELECT PRICING_SCENARIO_KEY
	FROM dbo.PRICING_SCENARIO src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.PRICING_SCENARIO_ID = dst.PARENT_SCENARIO_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.PARENT_SCENARIO_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;


-- PRICING_SCENARIO 
-- INVESTOR_STATUS_KEY
UPDATE dst SET dst.INVESTOR_STATUS_KEY = src.INVESTOR_STATUS_KEY
FROM dbo.PRICING_SCENARIO dst 
CROSS APPLY(
	SELECT INVESTOR_STATUS_KEY
	FROM dbo.INVESTOR_STATUS src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.INVESTOR_STATUS_ID = dst.INVESTOR_STATUS_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.INVESTOR_STATUS_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;

-- PRICING_SCENARIO 
-- INV_DUE_DILIGENCE_STATUS_KEY
UPDATE dst SET dst.INV_DUE_DILIGENCE_STATUS_KEY = src.INV_DUE_DILIGENCE_STATUS_KEY
FROM dbo.PRICING_SCENARIO dst 
CROSS APPLY(
	SELECT INV_DUE_DILIGENCE_STATUS_KEY
	FROM dbo.INV_DUE_DILIGENCE_STATUS src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.INV_DUE_DILIGENCE_STATUS_ID = dst.INV_DUE_DILIGENCE_STATUS_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.INV_DUE_DILIGENCE_STATUS_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;


-- PRICING_SCENARIO_RATING 
-- PARENT_SCENARIO_KEY
UPDATE dst SET dst.PRICING_SCENARIO_KEY = src.PRICING_SCENARIO_KEY
FROM dbo.PRICING_SCENARIO_RATING dst 
CROSS APPLY(
	SELECT PRICING_SCENARIO_KEY
	FROM dbo.PRICING_SCENARIO src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.PRICING_SCENARIO_ID = dst.PRICING_SCENARIO_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.PRICING_SCENARIO_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;


-- SOURCE_ACTIVITY_TYPE 
-- ACTIVITY_TYPE_KEY
UPDATE dst SET dst.ACTIVITY_TYPE_KEY = src.ACTIVITY_TYPE_KEY
FROM dbo.SOURCE_ACTIVITY_TYPE dst 
CROSS APPLY(
	SELECT ACTIVITY_TYPE_KEY
	FROM dbo.ACTIVITY_TYPE src 
	WHERE src.VALID_FROM <= dst.VALID_FROM AND
		  src.VALID_TILL > dst.VALID_FROM AND
		  src.[NAMESPACE] = dst.[NAMESPACE] AND
		  src.IS_CURRENT = 'Y' AND
		  src.ACTIVITY_TYPE_ID = dst.ACTIVITY_TYPE_ID
 ) AS src
 WHERE dst.[NAMESPACE] = 'CMT'
 --AND dst.ACTIVITY_TYPE_KEY IS NULL
 --AND dst.BATCH_ID = @BatchID ;
GO
